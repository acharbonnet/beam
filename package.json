{
  "name": "beam",
  "version": "0.1.5",
  "homepage": "./",
  "main": "./public/electron.js",
  "author": "Si <simsamsomred@gmail.com>",
  "description": "Beaming Resonate",
  "private": true,
  "dependencies": {
    "@emotion/css": "^11.9.0",
    "@emotion/react": "^11.9.0",
    "@emotion/styled": "^11.8.1",
    "@types/node": "^16.7.13",
    "@types/react": "^17.0.20",
    "@types/react-dom": "^17.0.9",
    "immer": "^9.0.12",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-h5-audio-player": "^3.8.3",
    "react-icons": "^4.3.1",
    "react-router-dom": "^6.3.0",
    "react-scripts": "5.0.0",
    "typescript": "^4.4.2",
    "web-vitals": "^2.1.0"
  },
  "scripts": {
    "start": "PORT=8080 react-scripts start",
    "build": "react-scripts build",
    "serve": "sirv build --port 8080 --cors --single",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "predeploy": "npm run build",
    "deploy": "gh-pages -d build",
    "electron:start": "concurrently -k \"cross-env BROWSER=none yarn start\" \"wait-on http://localhost:8080 && electronmon .\"",
    "electron:package:mac": "yarn build && electron-builder -m -c.extraMetadata.main=build/electron.js",
    "electron:package:win": "yarn build && electron-builder -w -c.extraMetadata.main=build/electron.js",
    "electron:package:linux": "yarn build && electron-builder -l -c.extraMetadata.main=build/electron.js",
    "release": "electron-builder -c.extraMetadata.main=build/electron.js"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      "last 1 electron version"
    ],
    "development": [
      "last 1 electron version",
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "build": {
    "appId": "com.resonate.beam",
    "productName": "Beam",
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "public"
    },
    "mac": {
      "target": "dmg",
      "icon": "build/icon.icns",
      "publish": [
        "github"
      ]
    },
    "win": {
      "target": "nsis",
      "icon": "build/icons.icns",
      "publish": [
        "github"
      ]
    },
    "linux": {
      "target": "deb",
      "category": "Audio",
      "icon": "build/icon.icns",
      "publish": [
        "github"
      ]
    }
  },
  "devDependencies": {
    "@commitlint/cli": "^16.2.3",
    "@commitlint/config-conventional": "^16.2.1",
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^12.0.0",
    "@testing-library/user-event": "^13.2.1",
    "@types/jest": "^27.0.1",
    "concurrently": "^7.1.0",
    "cross-env": "^7.0.3",
    "electron": "^18.0.3",
    "electron-builder": "^22.14.13",
    "electronmon": "^2.0.2",
    "gh-pages": "^3.2.3",
    "husky": "^7.0.4",
    "sirv-cli": "^2.0.2",
    "wait-on": "^6.0.1"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx,json,css,scss}": [
      "prettier — single-quote — write",
      "eslint --rule 'no-console: [\"error\", { \"allow\": [\"warn\", \"error\"] }]'"
    ]
  }
}
